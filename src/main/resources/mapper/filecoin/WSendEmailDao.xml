<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.filecoin.modules.filecoin.dao.WSendEmailDao">

	<!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="com.filecoin.modules.filecoin.entity.WSendEmailEntity" id="wSendEmailMap">
        <result property="id" column="id"/>
        <result property="email" column="email"/>
        <result property="userId" column="user_id"/>
        <result property="insertTime" column="insert_time"/>
        <result property="sendTime" column="send_time"/>
        <result property="status" column="status"/>
        <result property="returnCode" column="return_code"/>
        <result property="returnMessage" column="return_message"/>
		<result property="type" column="type"/>
    </resultMap>

	<select id="queryObject" resultType="com.filecoin.modules.filecoin.entity.WSendEmailEntity">
		select * from w_send_email where id = #{value}
	</select>
	<!-- 查询待发送的注册信息,按时间排序,每次取一个 -->
	<select id="queryOneNearBy" resultType="com.filecoin.modules.filecoin.entity.WSendEmailEntity">
		select * from w_send_email where 1=1 and status = 0 and type = 0 order by insert_time limit 0, 1
	</select>
	<!-- 查询待发送的修改密码邮件信息,按时间排序,每次取一个 -->
	<select id="queryOneEditPassNearBy" resultType="com.filecoin.modules.filecoin.entity.WSendEmailEntity">
		select * from w_send_email where 1=1 and status = 0 and type = 1 order by insert_time limit 0, 1
	</select>
	<!-- 查询待发送的找回密码邮件信息,按时间排序,每次取一个 -->
	<select id="queryOneCallBackPassNearBy" resultType="com.filecoin.modules.filecoin.entity.WSendEmailEntity">
		select * from w_send_email where 1=1 and status = 0 and type = 2 order by insert_time limit 0, 1
	</select>

	<select id="queryList" resultType="com.filecoin.modules.filecoin.entity.WSendEmailEntity">
		select * from w_send_email
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
			<otherwise>
                order by id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="queryTotal" resultType="int">
		select count(*) from w_send_email 
	</select>
	 
	<insert id="save" parameterType="com.filecoin.modules.filecoin.entity.WSendEmailEntity" useGeneratedKeys="true" keyProperty="id">
		insert into w_send_email
		(
			`email`, 
			`user_id`, 
			`insert_time`, 
			`send_time`, 
			`status`, 
			`return_code`, 
			`return_message`,
			`type`
		)
		values
		(
			#{email}, 
			#{userId}, 
			#{insertTime}, 
			#{sendTime}, 
			#{status}, 
			#{returnCode}, 
			#{returnMessage},
			#{type}
		)
	</insert>
	 
	<update id="update" parameterType="com.filecoin.modules.filecoin.entity.WSendEmailEntity">
		update w_send_email 
		<set>
			<if test="email != null">`email` = #{email}, </if>
			<if test="userId != null">`user_id` = #{userId}, </if>
			<if test="insertTime != null">`insert_time` = #{insertTime}, </if>
			<if test="sendTime != null">`send_time` = #{sendTime}, </if>
			<if test="status != null">`status` = #{status}, </if>
			<if test="returnCode != null">`return_code` = #{returnCode}, </if>
			<if test="returnMessage != null">`return_message` = #{returnMessage}</if>
			<if test="type != null">`type` = #{type}</if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="delete">
		delete from w_send_email where id = #{value}
	</delete>
	
	<delete id="deleteBatch">
		delete from w_send_email where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

</mapper>